{"version":3,"sources":["axios/axios-cards.js","containers/cardList/cardlist.js","axios/axios-store.js","components/au/Au.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Button/Button.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","CardList","searchCard","name","axiosCards","get","then","response","console","log","data","catch","error","_this2","this","list","Object","keys","props","Cards","map","igkey","toConsumableArray","Array","m","i","react_default","a","createElement","key","className","onClick","e","CardShow","cantidad","conseguidas","image","lore","src","alt","length","Component","defaults","headers","common","post","aux","children","backdrop","show","clicked","Modal","nextProps","nextState","Au","Backdrop_Backdrop","modalClosed","button","btnType","App","state","purchasing","modalCard","search","cards","card","purchaseHandler","_this","setState","purchaseCancelHandler","modalCardHandler","modalCardCancelHandler","handleInputChange","event","value","target","cardShow","nombre","cardDetail","id","cont","rest","deletedCard","axiosStore","delete","componentDidMount","updateMenusCard","cardUP","put","updatePlusCard","newCard","oracle_text","image_uris","small","reponse","updateDelCard","_this3","historial","_","cardList_cardlist","Show","components_Modal_Modal","Button_Button","placeholder","onChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iXASeA,EAPEC,IAAMC,OAAO,CAC1BC,QAAS,8BC8CEC,oNAzCXC,WAAa,SAACC,GACVC,EAAWC,IAAI,sBAAsBF,GACpCG,KAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,QAGxBC,MAAO,SAAAC,GACJJ,QAAQC,IAAIG,8EAKZ,IAAAC,EAAAC,KAEAC,EAAOC,OAAOC,KAAKH,KAAKI,MAAMC,OACjCC,IAAK,SAAAC,GACF,OAAOL,OAAAM,EAAA,EAAAN,CAAIO,MAAMV,EAAKK,MAAMC,MAAME,KAASD,IAAK,SAACI,EAAEC,GAC/C,OAAOC,EAAAC,EAAAC,cAAA,OACPC,IAAKR,EACLS,UAAU,QACVC,QAAS,SAAAC,GAAC,OAAInB,EAAKK,MAAMe,SAASD,EAAEX,EAAOG,EAAErB,KAAMqB,EAAEU,SAAUV,EAAEW,YAAaX,EAAEY,MAAOZ,EAAEa,QAGrFX,EAAAC,EAAAC,cAAA,OAAKU,IAAKd,EAAEY,MAAOG,IAAKf,EAAErB,OAC1BuB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BJ,EAAEU,UACjCR,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6BAA6BJ,EAAEW,kBAM9C,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,uBAAeb,EAAKyB,OAApB,KACCzB,UArCM0B,cCJjB5C,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,kDAGbH,EAAS6C,SAASC,QAAQC,OAA1B,cAAoD,0CACpD/C,EAAS6C,SAASC,QAAQE,KAAK,gBAAkB,oCAElChD,QCPAiD,EAFH,SAAC5B,GAAD,OAAWA,EAAM6B,UCQdC,eAJE,SAAC9B,GACd,OAAOA,EAAM+B,KAAOvB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWC,QAASb,EAAMgC,UAAkB,OCoBpEC,gMAhBWC,EAAWC,GAC7B,OAAOD,EAAUH,OAASnC,KAAKI,MAAM+B,MAAQG,EAAUL,WAAajC,KAAKI,MAAM6B,0CAI/E,OACIrB,EAAAC,EAAAC,cAAC0B,EAAD,KACI5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAUN,KAAMnC,KAAKI,MAAM+B,KAAMC,QAASpC,KAAKI,MAAMsC,cACrD9B,EAAAC,EAAAC,cAAA,OACIE,UAAWhB,KAAKI,MAAM+B,KAAO,kBAAoB,mBAChDnC,KAAKI,MAAM6B,kBAZZN,aCGLgB,SANC,SAACvC,GAAD,OACXQ,EAAAC,EAAAC,cAAA,UACGE,UAAWZ,EAAMwC,QACjB3B,QAASb,EAAMgC,SAFlB,IAE6BhC,EAAM6B,SAFnC,OCoOUY,6MA7NbC,MAAQ,CACNC,YAAY,EACZC,WAAW,EACXC,OAAQ,GACRC,MAAO,GACPC,KAAM,MAoBRC,gBAAkB,WACdC,EAAKC,SAAS,CAAEP,YAAY,EAAME,OAAQ,QAG9CM,sBAAwB,WACpBF,EAAKC,SAAS,CAAEP,YAAY,EAAOE,OAAQ,QAE/CO,iBAAmB,WACjBH,EAAKC,SAAS,CAAEN,WAAW,EAAMC,OAAQ,QAG3CQ,uBAAyB,WACrBJ,EAAKC,SAAS,CAAEN,WAAW,EAAOC,OAAQ,QAG9CS,kBAAoB,SAACC,GAAU,IACrBC,EAAUD,EAAME,OAAhBD,MAERtE,EAAWC,IAAI,yBAAyBqE,GACvCpE,KAAK,SAAAC,GACF4D,EAAKC,SAAS,CAAEL,OAAQxD,EAASG,KAAKA,SAEzCC,MAAO,SAAAC,GACJJ,QAAQC,IAAIG,QAKlBgE,SAAU,SAAC5C,EAAEX,EAAOwD,EAAQ3C,EAAUC,EAAaC,EAAOC,GACxD,IAAMyC,EAAa,CACjBC,GAAI1D,EACJlB,KAAM0E,EACNG,KAAM9C,EACN+C,KAAM9C,EACNC,MAAOA,EACPC,KAAMA,GAER8B,EAAKC,SAAS,CAAEH,KAAMa,IACtBX,EAAKG,sBAGPY,YAAc,WACZC,EAAWC,OAAO,UAAUjB,EAAKP,MAAMK,KAAKc,GAAG,SAC9CzE,KAAK,SAAAC,GACF4D,EAAKkB,oBACLlB,EAAKI,2BAER5D,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,QAKlB0E,gBAAkB,WAAM,IACdrB,EAASE,EAAKP,MAAdK,KACR,GAAIA,EAAKe,KAAO,EAAG,CACjB,IAAMO,EAAS,CACbpF,KAAM8D,EAAK9D,KACXiC,MAAO6B,EAAK7B,MACZC,KAAM4B,EAAK5B,KACXH,SAAU+B,EAAKe,KAAO,EACtB7C,YAAa8B,EAAKgB,KAAO,GAE3BE,EAAWK,IAAI,UAAUvB,EAAKc,GAAG,QAASQ,GACzCjF,KAAK,SAAAC,GACF4D,EAAKkB,oBACLlB,EAAKI,2BAER5D,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,UAGhBuD,EAAKI,4BAITkB,eAAiB,WAAM,IACbxB,EAASE,EAAKP,MAAdK,KACFsB,EAAS,CACbpF,KAAM8D,EAAK9D,KACXiC,MAAO6B,EAAK7B,MACZC,KAAM4B,EAAK5B,KACXH,SAAU+B,EAAKe,KAAO,EACtB7C,YAAa8B,EAAKgB,MAEpBE,EAAWK,IAAI,UAAUvB,EAAKc,GAAG,QAASQ,GACzCjF,KAAK,SAAAC,GACF4D,EAAKkB,oBACLlB,EAAKI,2BAER5D,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,QAIlB8E,QAAU,SAACjB,EAAOtE,GAChBC,EAAWC,IAAI,sBAAsBF,GACpCG,KAAK,SAAAC,GACF,IAAM0D,EAAO,CACb/B,SAAU,EACV/B,KAAMA,EACNgC,YAAa,EACbE,KAAM9B,EAASG,KAAKiF,YACpBvD,MAAO7B,EAASG,KAAKkF,WAAWC,OAEhCV,EAAWtC,KAAK,cAAeoB,GAC9B3D,KAAK,SAAAwF,GACF3B,EAAKkB,oBACLlB,EAAKE,0BAER1D,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,OAGnBD,MAAO,SAAAC,GACJJ,QAAQC,IAAIG,QAMnBmF,cAAgB,WAAM,IACb9B,EAASE,EAAKP,MAAdK,KACR,GAAIA,EAAKgB,KAAO,EAAG,CACjB,IAAMM,EAAS,CACbpF,KAAM8D,EAAK9D,KACXiC,MAAO6B,EAAK7B,MACZC,KAAM4B,EAAK5B,KACXH,SAAU+B,EAAKe,KACf7C,YAAa8B,EAAKgB,KAAO,GAE3BE,EAAWK,IAAI,UAAUvB,EAAKc,GAAG,QAASQ,GACzCjF,KAAK,SAAAC,GACF4D,EAAKkB,oBACLlB,EAAKI,2BAER5D,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,UAGhBuD,EAAKI,6GA7Ja,IAAA1D,EAAAC,KAClBqE,EAAW9E,IAAI,eACVC,KAAK,SAAAwF,GACFjF,EAAKuD,SAAS,CAAEJ,MAAO8B,EAAQpF,SAElCC,MAAM,SAAAC,GACHJ,QAAQC,IAAIG,sCA0Jb,IAAAoF,EAAAlF,KACHmF,EAAYjF,OAAOC,KAAKH,KAAK8C,MAAMG,QACtC3C,IAAK,SAAAC,GACF,OAAOL,OAAAM,EAAA,EAAAN,CAAIO,MAAMyE,EAAKpC,MAAMG,OAAO1C,KAASD,IAAK,SAACI,EAAE0E,GAChD,OAAOxE,EAAAC,EAAAC,cAAA,OACPC,IAAK,OAAOL,EACZO,QAAS,SAAAC,GAAC,OAAIgE,EAAKN,QAAQ1D,EAAER,IAC7BM,UAAU,UAELN,OAINyC,EAAQnD,KAAK8C,MAAbK,KACP,OAEEvC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,MAAMC,QAASjB,KAAKoD,iBAAtC,YACAxC,EAAAC,EAAAC,cAACuE,EAAD,CACEhF,MAAOL,KAAK8C,MAAMI,MAClBoC,KAAMtF,KAAKwD,iBACXrC,SAAUnB,KAAK8D,WAEjBlD,EAAAC,EAAAC,cAAC0B,EAAD,KACA5B,EAAAC,EAAAC,cAACyE,EAAD,CAEIpD,KAAMnC,KAAK8C,MAAME,UACjBN,YAAa1C,KAAKyD,wBACd7C,EAAAC,EAAAC,cAAA,cAAMqC,EAAK9D,KAAX,KACAuB,EAAAC,EAAAC,cAAA,OAAKU,IAAK2B,EAAK7B,MAAOG,IAAK0B,EAAK9D,OAChCuB,EAAAC,EAAAC,cAAA,SAAIqC,EAAK5B,MACTX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BqC,EAAKe,KAApC,IAA0CtD,EAAAC,EAAAC,cAAA,6BAA6BqC,EAAKgB,MAC5EvD,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ5C,QAAQ,iBAAiBR,QAASpC,KAAK2E,gBAA/C,WACA/D,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ5C,QAAQ,gBAAgBR,QAASpC,KAAKwE,iBAA9C,YAEA5D,EAAAC,EAAAC,cAAC0E,EAAD,CAAQ5C,QAAQ,gBAAgBR,QAASpC,KAAKoE,aAA9C,aAEJxD,EAAAC,EAAAC,cAACyE,EAAD,CACApD,KAAMnC,KAAK8C,MAAMC,WACjBL,YAAa1C,KAAKuD,uBACd3C,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SACA2E,YAAY,eACZC,SAAU,SAAAxE,GAAC,OAAIgE,EAAKxB,kBAAkBxC,MAClCiE,YAtNFxD,aCCEgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrF,EAAAC,EAAAC,cAACoF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/G,KAAK,SAAAgH,GACjCA,EAAaC","file":"static/js/main.8727ea33.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.scryfall.com/',\n\n})\n// instance.defaults.headers.common['Authorization'] = 'AIzaSyBSsaAL-yzBW-X7h1iTicGWEjQPyFyWcQg';\n// instance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nexport default instance;","import React, {Component} from 'react'\n\nimport axiosCards from '../../axios/axios-cards';\n\nimport './cardlist.css';\n\nclass CardList extends Component{\n\n    searchCard = (name) => {\n        axiosCards.get('/cards/named?exact='+name)\n        .then(response => {\n            console.log(response.data);\n            //return response.data;\n        })\n        .catch( error =>{\n            console.log(error);\n            //this.setState({ error: error });\n        })\n    }\n\n    render(){\n        //let list =\"nada\";\n        let list = Object.keys(this.props.Cards)\n        .map( igkey => {\n            return [...Array(this.props.Cards[igkey])].map( (m,i) => {\n                return <div \n                key={igkey} \n                className=\"Carta\"\n                onClick={e => this.props.CardShow(e,igkey, m.name, m.cantidad, m.conseguidas, m.image, m.lore)}\n                //onClick={this.}\n                >\n                    <img src={m.image} alt={m.name}/>\n                    <p><strong>Cantidad: </strong>{m.cantidad}</p>\n                    <p><strong>Restantes: </strong>{m.conseguidas}</p>\n                    \n                </div>\n            });\n        });\n\n        return(\n            <div>\n                <h1>- Lista de Cartas -</h1>\n                <h2> Buscadas {list.length} </h2>\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default CardList;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-46f7b.firebaseio.com/',\n\n})\ninstance.defaults.headers.common['Authorization'] = 'AIzaSyBSsaAL-yzBW-X7h1iTicGWEjQPyFyWcQg';\ninstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nexport default instance;","const aux = (props) => props.children ;\n\nexport default aux;","import React from 'react';\n\nimport './Backdrop.css'\n\nconst backdrop = (props) => {\n    return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n};\n\nexport default backdrop;","import React, { Component } from 'react';\n\nimport './Modal.css';\n\nimport Aux from '../au/Au';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n    \n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={this.props.show ? 'Modal ModalShow' : 'Modal ModalHide'}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        );\n    }\n}\nexport default Modal;","import React from 'react';\n\nimport './Button.css';\n\nconst button  = (props) => (\n     <button \n        className={props.btnType}\n        onClick={props.clicked}> {props.children} </button>\n);\n\nexport default button;","import React, { Component } from 'react';\nimport './App.css';\n\nimport CardList from './containers/cardList/cardlist';\nimport axiosCards from './axios/axios-cards';\nimport axiosStore from './axios/axios-store';\nimport Aux from './components/au/Au';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\n\n\nclass App extends Component {\n  state = {\n    purchasing: false,\n    modalCard: false,\n    search: [],\n    cards: {},\n    card: {},\n  }\n\n  componentDidMount() {\n    axiosStore.get('/cards.json')\n        .then(reponse => {\n            this.setState({ cards: reponse.data });\n        })\n        .catch(error => {\n            console.log(error);\n        });\n  }\n  // shouldComponentUpdate(nextProps, nextState){\n  //   console.log(this.state.cards, nextState);\n  //   return nextState.cards === this.state.cards;\n  // }\n  // componentWillUpdate(nextProps, nextState){\n  //   console.log(\"com\",nextProps, nextState);\n  // }\n\n  purchaseHandler = () => {\n      this.setState({ purchasing: true, search: [] });\n  }\n\n  purchaseCancelHandler = () => {\n      this.setState({ purchasing: false, search: [] });\n  }\n  modalCardHandler = () => {\n    this.setState({ modalCard: true, search: [] });\n}\n\n  modalCardCancelHandler = () => {\n      this.setState({ modalCard: false, search: [] });\n  }\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n\n    axiosCards.get('/cards/autocomplete?q='+value)\n    .then(response => {\n        this.setState({ search: response.data.data })\n    })\n    .catch( error =>{\n        console.log(error);\n    })\n\n  }\n\n  cardShow= (e,igkey, nombre, cantidad, conseguidas, image, lore) =>{\n    const cardDetail = {\n      id: igkey,\n      name: nombre,\n      cont: cantidad,\n      rest: conseguidas,\n      image: image,\n      lore: lore\n    }\n    this.setState({ card: cardDetail });\n    this.modalCardHandler();\n  }\n\n  deletedCard = () => {\n    axiosStore.delete('/cards/'+this.state.card.id+'.json')\n    .then(response => {\n        this.componentDidMount();\n        this.modalCardCancelHandler();\n    })\n    .catch(error => {\n        console.log(error);\n    });\n\n  }\n\n  updateMenusCard = () => {\n    const { card } = this.state;\n    if (card.cont > 0) {\n      const cardUP = {\n        name: card.name,\n        image: card.image,\n        lore: card.lore,\n        cantidad: card.cont - 1,\n        conseguidas: card.rest + 1\n      }\n      axiosStore.put('/cards/'+card.id+'.json', cardUP )\n      .then(response => {\n          this.componentDidMount();\n          this.modalCardCancelHandler();\n      })\n      .catch(error => {\n          console.log(error);\n      });\n    }else{\n      this.modalCardCancelHandler();\n    }\n  } \n  \n  updatePlusCard = () => {\n    const { card } = this.state;\n    const cardUP = {\n      name: card.name,\n      image: card.image,\n      lore: card.lore,\n      cantidad: card.cont + 1,\n      conseguidas: card.rest\n    }\n    axiosStore.put('/cards/'+card.id+'.json', cardUP )\n    .then(response => {\n        this.componentDidMount();\n        this.modalCardCancelHandler();\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }\n\n  newCard = (event, name) => {\n    axiosCards.get('/cards/named?exact='+name)\n    .then(response => {\n        const card = {\n        cantidad: 1,\n        name: name,\n        conseguidas: 0,\n        lore: response.data.oracle_text,\n        image: response.data.image_uris.small\n        }\n        axiosStore.post('/cards.json', card)\n        .then(reponse => {\n            this.componentDidMount();\n            this.purchaseCancelHandler();\n        })\n        .catch(error => {\n            console.log(error);\n        });\n    })\n    .catch( error =>{\n        console.log(error);\n        //this.setState({ error: error });\n    })\n\n }\n\n updateDelCard = () => {\n  const { card } = this.state;\n  if (card.rest > 0) {\n    const cardUP = {\n      name: card.name,\n      image: card.image,\n      lore: card.lore,\n      cantidad: card.cont,\n      conseguidas: card.rest - 1\n    }\n    axiosStore.put('/cards/'+card.id+'.json', cardUP )\n    .then(response => {\n        this.componentDidMount();\n        this.modalCardCancelHandler();\n    })\n    .catch(error => {\n        console.log(error);\n    });\n  }else{\n    this.modalCardCancelHandler();\n  }\n} \n  render() {\n    let historial = Object.keys(this.state.search)\n    .map( igkey => {\n        return [...Array(this.state.search[igkey])].map( (m,_) => {\n            return <div \n            key={'card'+m} \n            onClick={e => this.newCard(e,m)}\n            className=\"opcion\"\n            >\n                {m}\n            </div>\n        });\n    });\n    const {card} = this.state;\n    return (\n      \n      <div className=\"App\">\n        <button className=\"btn\" onClick={this.purchaseHandler}> Buscar </button>\n        <CardList \n          Cards={this.state.cards}\n          Show={this.modalCardHandler}\n          CardShow={this.cardShow}\n          />\n        <Aux>\n        <Modal \n            \n            show={this.state.modalCard} \n            modalClosed={this.modalCardCancelHandler}>\n                <h1> {card.name} </h1>\n                <img src={card.image} alt={card.name}/>\n                <p>{card.lore}</p>\n                <br/>\n                <p><strong>Cantidad: </strong>{card.cont} <strong>Restantes: </strong>{card.rest}</p>\n                <Button btnType=\"Button Success\" clicked={this.updatePlusCard}> Sumar </Button>\n                <Button btnType=\"Button Restar\" clicked={this.updateMenusCard}> Restar </Button>\n                {/* <Button btnType=\"Button Warning\" clicked={this.updateDelCard}> Perdi la carta </Button> */}\n                <Button btnType=\"Button Danger\" clicked={this.deletedCard}> Borrar </Button>\n            </Modal>\n            <Modal \n            show={this.state.purchasing} \n            modalClosed={this.purchaseCancelHandler}>\n                <h1> Buscador de Cartas </h1>\n                <input \n                placeholder=\"Buscar Carta\" \n                onChange={e => this.handleInputChange(e)}/>\n                  { historial } \n            </Modal>\n        </Aux>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}